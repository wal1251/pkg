package tests

// Code generated by gowrap. DO NOT EDIT.
// template: ../hook
// gowrap: http://github.com/hexdigest/gowrap

//go:generate gowrap gen -p github.com/wal1251/pkg/proxy/tests -i SampleInterface -t ../hook -o interface_hook.go -l ""

import (
	"context"

	_proxyLib "github.com/wal1251/pkg/proxy"
)

var _ SampleInterface = (*SampleInterfaceHook)(nil)

// SampleInterfaceHook implements SampleInterface interface wrapper
type SampleInterfaceHook struct {
	SampleInterface
	_beforeCall _proxyLib.Hook
	_postCall   _proxyLib.Hook
	_onPanic    _proxyLib.PanicHook
}

// NoArgsAndNoReturn implements SampleInterface
func (_w *SampleInterfaceHook) NoArgsAndNoReturn() {
	_params := []any{}
	defer _w._onPanic.Hook(_w.SampleInterface, "NoArgsAndNoReturn", _params)

	_ctx := _proxyLib.ExtractContext(_params)
	_ctx = _w._beforeCall.Hook(_ctx, _w.SampleInterface, "NoArgsAndNoReturn", _params)

	_w.SampleInterface.NoArgsAndNoReturn()
	_w._postCall.Hook(_ctx, _w.SampleInterface, "NoArgsAndNoReturn", []any{})
	return
}

// WithArgsAndReturn implements SampleInterface
func (_w *SampleInterfaceHook) WithArgsAndReturn(s1 string, s2 string) (s3 string, err error) {
	_params := []any{s1, s2}
	defer _w._onPanic.Hook(_w.SampleInterface, "WithArgsAndReturn", _params)

	_ctx := _proxyLib.ExtractContext(_params)
	_ctx = _w._beforeCall.Hook(_ctx, _w.SampleInterface, "WithArgsAndReturn", _params)

	s3, err = _w.SampleInterface.WithArgsAndReturn(s1, s2)
	_w._postCall.Hook(_ctx, _w.SampleInterface, "WithArgsAndReturn", []any{s3, err})
	return s3, err
}

// WithContextArgAndReturn implements SampleInterface
func (_w *SampleInterfaceHook) WithContextArgAndReturn(ctx context.Context, s1 string, s2 string) (s3 string, err error) {
	_params := []any{ctx, s1, s2}
	defer _w._onPanic.Hook(_w.SampleInterface, "WithContextArgAndReturn", _params)

	_ctx := _proxyLib.ExtractContext(_params)
	_ctx = _w._beforeCall.Hook(_ctx, _w.SampleInterface, "WithContextArgAndReturn", _params)

	s3, err = _w.SampleInterface.WithContextArgAndReturn(_ctx, s1, s2)
	_w._postCall.Hook(_ctx, _w.SampleInterface, "WithContextArgAndReturn", []any{s3, err})
	return s3, err
}

// WithContextVarArgAndReturn implements SampleInterface
func (_w *SampleInterfaceHook) WithContextVarArgAndReturn(ctx context.Context, s1 string, p1 ...string) (s2 string, err error) {
	_params := []any{ctx, s1, p1}
	defer _w._onPanic.Hook(_w.SampleInterface, "WithContextVarArgAndReturn", _params)

	_ctx := _proxyLib.ExtractContext(_params)
	_ctx = _w._beforeCall.Hook(_ctx, _w.SampleInterface, "WithContextVarArgAndReturn", _params)

	s2, err = _w.SampleInterface.WithContextVarArgAndReturn(_ctx, s1, p1...)
	_w._postCall.Hook(_ctx, _w.SampleInterface, "WithContextVarArgAndReturn", []any{s2, err})
	return s2, err
}

// NewSampleInterfaceHook returns SampleInterfaceHook
func NewSampleInterfaceHook(object SampleInterface, beforeCall _proxyLib.Hook, postCall _proxyLib.Hook, onPanic _proxyLib.PanicHook) *SampleInterfaceHook {
	return &SampleInterfaceHook{
		SampleInterface: object,
		_beforeCall:     beforeCall,
		_postCall:       postCall,
		_onPanic:        onPanic,
	}
}
