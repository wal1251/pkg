package tests

// Code generated by gowrap. DO NOT EDIT.
// template: ../proxy
// gowrap: http://github.com/hexdigest/gowrap

//go:generate gowrap gen -p github.com/wal1251/pkg/proxy/tests -i SampleInterface -t ../proxy -o interface_proxy.go -l ""

import (
	"context"

	_proxyLib "github.com/wal1251/pkg/proxy"
)

var _ SampleInterface = (*SampleInterfaceProxy)(nil)

// SampleInterfaceProxy implements SampleInterface interface proxy
type SampleInterfaceProxy struct {
	_object                      SampleInterface
	_methodInvocationInterceptor _proxyLib.MethodInvocationInterceptor
	_panicInterceptor            _proxyLib.PanicInterceptor
}

// NoArgsAndNoReturn implements SampleInterface
func (_p *SampleInterfaceProxy) NoArgsAndNoReturn() {
	defer _proxyLib.PanicInterception(_p._panicInterceptor)

	_genericFunc := _p._methodInvocationInterceptor.GenericFunction(_p._object, "NoArgsAndNoReturn")
	_proxyNoArgsAndNoReturn := _proxyLib.MakeFunc[func()](_genericFunc)
	_proxyNoArgsAndNoReturn()
	return
}

// WithArgsAndReturn implements SampleInterface
func (_p *SampleInterfaceProxy) WithArgsAndReturn(s1 string, s2 string) (s3 string, err error) {
	defer _proxyLib.PanicInterception(_p._panicInterceptor)

	_genericFunc := _p._methodInvocationInterceptor.GenericFunction(_p._object, "WithArgsAndReturn")
	_proxyWithArgsAndReturn := _proxyLib.MakeFunc[func(s1 string, s2 string) (s3 string, err error)](_genericFunc)
	return _proxyWithArgsAndReturn(s1, s2)
}

// WithContextArgAndReturn implements SampleInterface
func (_p *SampleInterfaceProxy) WithContextArgAndReturn(ctx context.Context, s1 string, s2 string) (s3 string, err error) {
	defer _proxyLib.PanicInterception(_p._panicInterceptor)

	_genericFunc := _p._methodInvocationInterceptor.GenericFunction(_p._object, "WithContextArgAndReturn")
	_proxyWithContextArgAndReturn := _proxyLib.MakeFunc[func(ctx context.Context, s1 string, s2 string) (s3 string, err error)](_genericFunc)
	return _proxyWithContextArgAndReturn(ctx, s1, s2)
}

// WithContextVarArgAndReturn implements SampleInterface
func (_p *SampleInterfaceProxy) WithContextVarArgAndReturn(ctx context.Context, s1 string, p1 ...string) (s2 string, err error) {
	defer _proxyLib.PanicInterception(_p._panicInterceptor)

	_genericFunc := _p._methodInvocationInterceptor.GenericFunction(_p._object, "WithContextVarArgAndReturn")
	_proxyWithContextVarArgAndReturn := _proxyLib.MakeFunc[func(ctx context.Context, s1 string, p1 ...string) (s2 string, err error)](_genericFunc)
	return _proxyWithContextVarArgAndReturn(ctx, s1, p1...)
}

// NewSampleInterfaceProxy returns SampleInterfaceProxy
func NewSampleInterfaceProxy(object SampleInterface, middlewares ..._proxyLib.MethodInvocationMiddleware) *SampleInterfaceProxy {
	return &SampleInterfaceProxy{
		_object:                      object,
		_methodInvocationInterceptor: _proxyLib.MakeMethodInvocationInterceptor(middlewares...),
		_panicInterceptor:            _proxyLib.DefaultPanicInterceptor,
	}
}

// NewSampleInterfaceProxyWithPanicHook returns SampleInterfaceProxy
func NewSampleInterfaceProxyWithPanicHook(object SampleInterface, onPanic _proxyLib.PanicInterceptor, middlewares ..._proxyLib.MethodInvocationMiddleware) *SampleInterfaceProxy {
	return &SampleInterfaceProxy{
		_object:                      object,
		_methodInvocationInterceptor: _proxyLib.MakeMethodInvocationInterceptor(middlewares...),
		_panicInterceptor:            onPanic,
	}
}
